/*Урок 5(Функции)  Егоров А.В
 *
 * 1.Задать целочисленный массив, состоящий из элементов 0 и 1.
    Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
    Написать функцию, заменяющую в принятом массиве 0 на 1, 1 на 0;
  2.Задать пустой целочисленный массив размером 8.
    Написать функцию, которая с помощью цикла заполнит его значениями 1 4 7 10 13 16 19 22;
* 3.Написать функцию, в которую передается не пустой одномерный целочисленный массив,
*   метод должен вернуть истину если в массиве есть место, в котором сумма левой и правой части массива равны.
*   Примеры: checkBalance([1, 1, 1, || 2, 1]) → true, checkBalance ([2, 1, 1, 2, 1]) → false,
*   checkBalance ([10, || 1, 2, 3, 4]) → true. Абстрактная граница показана символами ||, эти символы в массив не входят.
* 4.Написать функцию, которой на вход подаётся одномерный массив и число n
*   (может быть положительным, или отрицательным), при этом метод должен циклически сместить
*   все элементы массива на n позиций.
* 5.Написать функцию из первого задания так, чтобы она работала с аргументом переменной длины.
* 6.Написать все функции в отдельных файлах в одном пространстве имён, вызвать их на исполнение
*  в основном файле программы используя указатели на функции.*/

#include <iostream>
using namespace std;
#include "My_functions.h"
using namespace ArrayFunctions;

//4


int main()
{
    /*1.Задать целочисленный массив, состоящий из элементов 0 и 1.
        Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
        Написать функцию, заменяющую в принятом массиве 0 на 1, 1 на 0;
        */
   int Arr1[10] = {1,1,0,0,1,0,1,1,0,0};
   ArraySwap(Arr1,10);


/*2.Задать пустой целочисленный массив размером 8.
    Написать функцию, которая с помощью цикла заполнит его значениями 1 4 7 10 13 16 19 22;*/
const int n = 8;
int Arr2[n] = {0};
int (*ptFill)(int*,int);
ptFill = ArrayFunctions :: Arrayfill();
Arrayfill(Arr2,8);

/*3.Написать функцию, в которую передается не пустой одномерный целочисленный массив,
*   метод должен вернуть истину если в массиве есть место, в котором сумма левой и правой части массива равны.
*   Примеры: checkBalance([1, 1, 1, || 2, 1]) → true, checkBalance ([2, 1, 1, 2, 1]) → false,
*   checkBalance ([10, || 1, 2, 3, 4]) → true. Абстрактная граница показана символами ||, эти символы в массив не входят.
*   */

//int Arr3[5]= {1,1,1,2,1};
//int Arr4[5]= {2,1,1,2,1};
int Arr5[5] = {10,1,2,3,4};

//ArrayBalance(Arr3,5);
//ArrayBalance(Arr4,5);
ArrayBalance(Arr5,5);


/*4.Написать функцию, которой на вход подаётся одномерный массив и число n
*   (может быть положительным, или отрицательным), при этом метод должен циклически сместить
*   все элементы массива на n позиций.*/





    return 0;
}
